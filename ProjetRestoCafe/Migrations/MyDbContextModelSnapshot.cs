// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ProjetRestoCafe.data;

#nullable disable

namespace ProjetRestoCafe.Migrations
{
    [DbContext(typeof(MyDbContext))]
    partial class MyDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("ProjetRestoCafe.domaine.Categorie", b =>
                {
                    b.Property<int>("CategorieId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("CategorieId");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("ProjetRestoCafe.domaine.Credit", b =>
                {
                    b.Property<int>("CreditId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("ServeurId")
                        .HasColumnType("int");

                    b.Property<double>("montant")
                        .HasColumnType("double");

                    b.HasKey("CreditId");

                    b.ToTable("Credits");
                });

            modelBuilder.Entity("ProjetRestoCafe.domaine.Depense", b =>
                {
                    b.Property<int>("DepenseId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Libelle")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<double>("Montant")
                        .HasColumnType("double");

                    b.HasKey("DepenseId");

                    b.ToTable("Depenses");
                });

            modelBuilder.Entity("ProjetRestoCafe.domaine.Produit", b =>
                {
                    b.Property<int>("ProduitId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("CategorieId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<byte[]>("Image")
                        .IsRequired()
                        .HasColumnType("longblob");

                    b.Property<string>("Libelle")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("Prix")
                        .HasColumnType("int");

                    b.HasKey("ProduitId");

                    b.HasIndex("CategorieId");

                    b.ToTable("Produits");
                });

            modelBuilder.Entity("ProjetRestoCafe.domaine.ProduitVente", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("ProduitId")
                        .HasColumnType("int");

                    b.Property<int>("Quantite")
                        .HasColumnType("int");

                    b.Property<int>("VenteId")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("ProduitId");

                    b.HasIndex("VenteId");

                    b.ToTable("ProduitVentes");
                });

            modelBuilder.Entity("ProjetRestoCafe.domaine.Serveur", b =>
                {
                    b.Property<int>("ServeurId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Adresse")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Numtel")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Prenom")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("ServeurId");

                    b.ToTable("Serveurs");
                });

            modelBuilder.Entity("ProjetRestoCafe.domaine.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("UserId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("ProjetRestoCafe.domaine.Vente", b =>
                {
                    b.Property<int>("VenteId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime(6)");

                    b.Property<int?>("ServeurId")
                        .HasColumnType("int");

                    b.HasKey("VenteId");

                    b.HasIndex("ServeurId");

                    b.ToTable("Ventes");
                });

            modelBuilder.Entity("ProjetRestoCafe.domaine.Produit", b =>
                {
                    b.HasOne("ProjetRestoCafe.domaine.Categorie", null)
                        .WithMany("Produits")
                        .HasForeignKey("CategorieId");
                });

            modelBuilder.Entity("ProjetRestoCafe.domaine.ProduitVente", b =>
                {
                    b.HasOne("ProjetRestoCafe.domaine.Produit", "Produit")
                        .WithMany("VenteProduits")
                        .HasForeignKey("ProduitId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ProjetRestoCafe.domaine.Vente", "Vente")
                        .WithMany("VenteProduits")
                        .HasForeignKey("VenteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Produit");

                    b.Navigation("Vente");
                });

            modelBuilder.Entity("ProjetRestoCafe.domaine.Vente", b =>
                {
                    b.HasOne("ProjetRestoCafe.domaine.Serveur", null)
                        .WithMany("Vents")
                        .HasForeignKey("ServeurId");
                });

            modelBuilder.Entity("ProjetRestoCafe.domaine.Categorie", b =>
                {
                    b.Navigation("Produits");
                });

            modelBuilder.Entity("ProjetRestoCafe.domaine.Produit", b =>
                {
                    b.Navigation("VenteProduits");
                });

            modelBuilder.Entity("ProjetRestoCafe.domaine.Serveur", b =>
                {
                    b.Navigation("Vents");
                });

            modelBuilder.Entity("ProjetRestoCafe.domaine.Vente", b =>
                {
                    b.Navigation("VenteProduits");
                });
#pragma warning restore 612, 618
        }
    }
}
